name: Master Deployment Workflow
on:
  workflow_dispatch:
    inputs:
      choice:
        type: choice
        required: true
        description: Select a branch to deploy
        options:
          - Dev
          - QA
          - Staging

env:
  GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

jobs:
  execute_workflow:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: List branches
        run: git branch -a

      - name: Execute workflow for selected branch
        run: |
          if [ "${{ inputs.choice }}" == "Dev" ]; then
            echo "Executing workflow for Dev branch"
            git fetch --all
            git branch -a
            git checkout Dev
            echo "Running workflow on the Dev branch..."
            gh workflow run Dev.yml --ref Dev --raw-field branch="Dev"
          elif [ "${{ inputs.choice }}" == "QA" ]; then
            echo "Executing workflow for QA branch"
            git fetch --all
            git branch -a
            git checkout QA
            echo "Running workflow on the QA branch..."
            gh workflow run qa_workflow.yaml --ref QA
          elif [ "${{ inputs.choice }}" == "Staging" ]; then
            echo "Executing workflow for Staging branch"
            git fetch --all
            git branch -a
            git checkout Staging
            echo "Running workflow on the Staging branch..."
            gh workflow run Staging_workflow.yaml --ref Staging
          else
            echo "Invalid choice"
            exit 1
          fi
          
      - name: Install kubectl
        run: |
          curl -fsSL -o kubectl https://storage.googleapis.com/kubernetes-release/release/v1.23.2/bin/linux/amd64/kubectl
          chmod +x kubectl
          sudo mv kubectl /usr/local/bin/kubectl

      - name: Install Helm
        run: |
          curl -fsSL -o get_helm.sh https://raw.githubusercontent.com/helm/helm/main/scripts/get-helm-3
          chmod 700 get_helm.sh
          ./get_helm.sh
          
      - name: Checkout code
        uses: actions/checkout@v3
        
      - name: display directory
        run: ls -a
        env:
          ACTIONS_RUNNER_DEBUG: true
          
      - name: Install Minikube and Dependencies
        run: |
          # Install Minikube
          curl -LO https://storage.googleapis.com/minikube/releases/latest/minikube-linux-amd64
          chmod +x minikube-linux-amd64
          sudo mv minikube-linux-amd64 /usr/local/bin/minikube

          # Install conntrack (required by none driver)
          sudo apt-get update
          sudo apt-get install -y conntrack

          # Install crictl (required by Kubernetes 1.27.3)
          sudo curl -L https://github.com/kubernetes-sigs/cri-tools/releases/download/v1.22.0/crictl-v1.22.0-linux-amd64.tar.gz --output crictl.tar.gz
          sudo tar zxvf crictl.tar.gz -C /usr/local/bin
          sudo chmod +x /usr/local/bin/crictl

          # Install cri-dockerd (required by none driver with Kubernetes v1.24+ and Docker container runtime)
          sudo curl -L https://github.com/Mirantis/cri-dockerd/releases/download/v1.4.4/cri-dockerd-1.4.4-linux-amd64.tar.gz --output cri-dockerd.tar.gz
          sudo tar zxvf cri-dockerd.tar.gz -C /usr/local/bin
          sudo chmod +x /usr/local/bin/cri-dockerd

          # Start Minikube with none driver
          sudo minikube start --driver=none




      - name: Configure kubectl for Minikube
        run: |
          sudo cp /root/.kube $HOME/.kube
          sudo chown -R $USER $HOME/.kube
          sudo chgrp -R $USER $HOME/.kube
          
      - name: Deploy Helm Chart
        run: |
          helm install my-nginx helmcharts

